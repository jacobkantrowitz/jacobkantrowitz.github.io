design3
colnames(design3)
summary(eset$GENDErc)
summary(eset$GENDERc)
eset <- removeFactorLevel(eset, "GENDERc" , "DK")
design3 <- model.matrix(~ 1 + SMKc + BATCH + RIN + GENDERc + RACE4PFTs + AGEcalc, data=eset)
eset
colnames(design3)
fitY
fitY <- lmFit(eset, design3)
summary(eset$BATCH)
eset <- removeFactorLevel("eset", "BATCH", "12.1")
summary(eset$BATCH)
colnames(eset)
varLabels(eset)
design3 <- model.matrix(~ 1 + SMKc + RIN + GENDERc + RACE4PFTs + AGEcalc, data=eset)
colnames(design3)
fitY
fitY <- lmFit(eset, design3)
dim(design3)
dim(eset)
summary(eset)
design3 <- model.matrix(~ 1 + SMKc + RIN + GENDERc + RACE4PFTs + AGEcalc, data=eset)
fitY <- lmFit(eset, design3)
summary(eset$SMKc)
summary(eset$RIN)
summary(eset$GENDERc)
summary(eset$RACE4PFTs)
eset <- cleanNAForAnalysis(eset, "RIN")
eset <- cleanNAForAnalysis(eset, "RACE4PFTs")
summary(eset)
eset
fitY <- lmFit(eset, design3)
eset <- calcIndicator(eset, "COPD2_R7", "FinalCaDXc")
copd <- eset$COPD2_R7
copd <- factor(copd, levels=c(0,1,"COPD", "noCOPD"))
copd[copd==1] <- "COPD"
copd[copd==0] <- "noCOPD"
copd <- factor(copd, levels=c("COPD", "noCOPD"))
# define a new Cancer factor with appropriate labels
cancer <- eset$FinalCaDXc
cancer <- factor(cancer, levels=c(0,1,"Cancer", "noCancer"))
cancer[cancer==1] <- "Cancer"
cancer[cancer==0] <- "noCancer"
cancer <- factor(cancer, levels=c("Cancer","noCancer"))
# define a new COPD.Cancer factor with appropriate labels
CC <- paste(copd,cancer,sep=".")
CC <- factor(CC, levels=c("noCOPD.noCancer", "noCOPD.Cancer", "COPD.noCancer", "COPD.Cancer"))
# define the model matrix to solve
design <- model.matrix(~0+CC)
colnames(design) <- levels(CC)
contrast.matrix <- makeContrasts(HealthyVsCancer=noCOPD.noCancer-noCOPD.Cancer, HealthyVsCOPD=noCOPD.noCancer-COPD.noCancer, HealthyVsCC=noCOPD.noCancer-COPD.Cancer, CancerVsCOPD=noCOPD.Cancer-COPD.noCancer, CancerVsCC=noCOPD.Cancer-COPD.Cancer, COPDvsCC=COPD.noCancer-COPD.Cancer, levels=design)
fitY2 <- contrasts.fit(fitY, contrast.matrix)
summary(contrast.matrix)
dim(contrast.matrix)
contrast.matrix
fitY
fitY2 <- contrasts.fit(fitY, contrast.matrix)
contrast.matrix
colnames(fti)
colnames(fit)
?rma
?nuse
dd
dd <- model.matrix(~ ) + factor(c(1,1,1,2,2,3,3,3))
dd <- model.matrix(~ 0 + factor(c(1,1,1,2,2,3,3,3))
)
dd
colnames(dd) <- c("group1", "group2", "group3")
dd
is.object(eset)
isS4(eset)
a
is.object(a)
isS4(a)
results
isS4(results)
otype(results)
library(pryr)
pryr::otype()
methods()
methods(sum())
sum()
methods("sum")
methods("mean")
methods("t.test")
class(eset)
class(ExpressionSet)
class(glm())
class(glsm)
class(glm)
class("glm")
d
?duplicateCorrelation
?lmFit
design
design <- model.matrix(~0 + COPD2_R7 + FinalCaDXc, levels=pData(eset))
design <- model.matrix(~0 + COPD2_R7 + FinalCaDXc, data=pData(eset))
design
dim(design)
design <- model.matrix(~0 + COPD2_R7, data=pData(eset))
design
design <- model.matrix(~0 + FinalCaDXc, data=pData(eset))
design
design <- model.matrix(~1 + FinalCaDXc, data=pData(eset))
design
design <- model.matrix(~1 + FinalCaDXc + COPD2_R7, data=pData(eset))
design
design <- model.matrix(~0 + FinalCaDXc + COPD2_R7, data=pData(eset))
design
CC
length(CC)
eset
design <- model.matrix(~0+ CC)
design
colnames(design)
colnames(design) <- levels(CC)
colnames(design)
fit <- lmFit(eset, design)
cont.matrix <- makeContrasts(HealthyVsCancer=noCOPD.noCancer-noCOPD.Cancer, HealthyVsCOPD=noCOPD.noCancer-COPD.noCancer, HealthyVsCC=noCOPD.noCancer-COPD.Cancer, CancerVsCOPD=noCOPD.Cancer-COPD.noCancer, CancerVsCC=noCOPD.Cancer-COPD.Cancer, COPDvsCC=COPD.noCancer-COPD.Cancer, levels=design)
cont.matrix
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2)
topTable(fit2, adjust="fdr")
topTable(fit2, adjust="fdr", coef=1)
topTable(fit2, adjust="fdr", coef=6)
topTable(fit2, adjust="fdr", coef=7)
topTable(fit2, adjust="fdr", coef=6)
topTable(fit2, adjust="fdr", coef="noCOPD.noCancer")
topTable(fit2, adjust="fdr", coef="HealthyVsCancer"
)
topTable(fit2, adjust="fdr", coef="COPDvsCC")
colnames(cont.matrix)
topTable(fit2, adjust="fdr", coef="COPDvsCC", p.val=0.05)
topTable(fit2, adjust="fdr", coef="COPDvsCC", p.val=0.25)
cont.matrix <- makeContrasts(HealthyVsCancer = noCOPD.noCancer - noCOPD.Cancer,
HealthyVsCOPD = noCOPD.noCancer - COPD.noCancer,
HealthyVsCC = noCOPD.noCancer - COPD.Cancer,
CancerVsCOPD = noCOPD.Cancer - COPD.noCancer,
CancerVsCC = noCOPD.Cancer - COPD.Cancer,
COPDvsCC = COPD.noCancer - COPD.Cancer,
Diff = ((COPD.Cancer - noCOPD.Cancer) -
(COPD.noCancer - noCOPD.noCancer)),
levels=design)
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2)
dim(fit2)
colnames(fit2)
topTable(fit2, coef=7)
topTable(fit2, coef=7, adjust.method="fdr")
topTable(fit2, coef=7, adjust.method="fdr", p.value=0.05)
topTable(fit2, coef=7, adjust.method="fdr", p.value=0.1)
topTable(fit2, coef=7, adjust.method="fdr", p.value=0.15)
topTable(fit2, coef=7, adjust.method="fdr", p.value=0.15, number=30)
topTable(fit2, coef=7, adjust.method="fdr", p.value=0.15, number=40)
topTable(fit2, coef=7, adjust.method="fdr", p.value=0.15, number=100)
topTable(fit2, coef=7, adjust.method="fdr", p.value=0.15, number=1000)
topTable(fit2, coef=7, adjust.method="fdr", p.value=0.11, number=1000)
dim(topTable(fit2, coef=7, adjust.method="fdr", p.value=0.11, number=1000))
dim(topTable(fit2, coef=7, adjust.method="fdr", p.value=0.11, number=100))
dim(topTable(fit2, coef=7, adjust.method="fdr", p.value=0.11, number=127))
dim(topTable(fit2, coef=7, adjust.method="fdr", p.value=0.12, number=127))
dim(topTable(fit2, coef=7, adjust.method="fdr", p.value=0.12, number=200))
dim(topTable(fit2, coef=7, adjust.method="fdr", p.value=0.12, number=1000))
(topTable(fit2, coef=7, adjust.method="fdr", p.value=0.12, number=1000)
)
cont.matrix
cont.matrix <- makeContrasts(HealthyVsCancer = noCOPD.noCancer - noCOPD.Cancer,
HealthyVsCOPD = noCOPD.noCancer - COPD.noCancer,
HealthyVsCC = noCOPD.noCancer - COPD.Cancer,
CancerVsCOPD = noCOPD.Cancer - COPD.noCancer,
CancerVsCC = noCOPD.Cancer - COPD.Cancer,
COPDvsCC = COPD.noCancer - COPD.Cancer,
Diff1 = ((COPD.Cancer - noCOPD.Cancer) -
(COPD.noCancer - noCOPD.noCancer)),
Diff2 = c(-1,-1,-1,1),
levels=design)
cont.matrix
cont.matrix <- makeContrasts(HealthyVsCancer = noCOPD.noCancer - noCOPD.Cancer,
HealthyVsCOPD = noCOPD.noCancer - COPD.noCancer,
HealthyVsCC = noCOPD.noCancer - COPD.Cancer,
CancerVsCOPD = noCOPD.Cancer - COPD.noCancer,
CancerVsCC = noCOPD.Cancer - COPD.Cancer,
COPDvsCC = COPD.noCancer - COPD.Cancer,
Diff1 = ((COPD.Cancer - noCOPD.Cancer) -
(COPD.noCancer - noCOPD.noCancer)),
Diff2 = c(-1, -1, -1, 1),
Diff3 = c(1, 1, 1, -1),
levels=design)
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2)
topTable(fit2, coef=8)
topTable(fit2, coef=8, method="fdr'")
topTable(fit2, coef=8, method="fdr")
topTable(fit2, coef=8, adjust.method="fdr")
topTable(fit2, coef=9, adjust.method="fdr")
cont.matrix <- makeContrasts(HealthyVsCancer = noCOPD.noCancer - noCOPD.Cancer,
HealthyVsCOPD = noCOPD.noCancer - COPD.noCancer,
HealthyVsCC = noCOPD.noCancer - COPD.Cancer,
CancerVsCOPD = noCOPD.Cancer - COPD.noCancer,
CancerVsCC = noCOPD.Cancer - COPD.Cancer,
COPDvsCC = COPD.noCancer - COPD.Cancer,
Diff1 = ((COPD.Cancer - noCOPD.Cancer) -
(COPD.noCancer - noCOPD.noCancer)),
Diff2 = c(-1, -1, -1, 1),
levels=design)
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2)
results <- decideTests(fit2)
summary(results)
results <- decideTests(fit2, adjust.method="fdr")
summary(results)
results
summary(results)
results <- decideTests(fit2, adjust.method="fdr", p.value=0.1)
summary(results)
results <- decideTests(fit2, adjust.method="fdr", p.value=0.05)
summary(results)
which(results[,1]!=0)
rownames(results)[results[,1]!=0]
match(rownames(results)[results[,1]!=0], featureNames(eset))
generate_heatmap(which(results[,1]!=0), eset)
summary(results)
summary(results)
fit2$F.p.value
dim(fit2$F.p.value)
o <- order(fit2$F.p.value)
fit2$genes[o[1:30], ]
summary(results)
vennDiagram(results[1:5])
vennDiagram(results[1:5],)
vennDiagram(results[1:5,])
vennDiagram(results[, 1:5])
vennDiagram(results[, 1:$])
vennDiagram(results[, 1:4])
vennDiagram(results[, 2:5])
which(results[, 2] != 0 & results[, 3] != 0 & results[, 4] != 0 & results[, 5] != 0 )
length(which(results[, 2] != 0 & results[, 3] != 0 & results[, 4] != 0 & results[, 5] != 0 ))
generate_heatmap(which(results[, 2] != 0 & results[, 3] != 0 & results[, 4] != 0 & results[, 5] != 0 ), eset)
design
colnames(design)
dim(CC)
length(CC)
class(CC)
design2 <- cbind(design, eset$SMKc)
design2
class(design2)
class(design2[1,5])
class(design2[1,4])
design2 <- model.matrix(design2)
length(eset$SMKc)
design <- model.matrix(~0 + CC + eset$SMKc)
design
colnames(design)
colnames(design) <- c(levels(CC), "SMKc")
colnames(design)
fitX <- lmFit(eset, design2)
cont.matrix
dim(cont.matrix)
rbind(cont.matrix, c(0,0,0,0))
makeContrasts(rbind(cont.matrix, c(0,0,0,0)))
makeContrasts(rbind(cont.matrix, c(0,0,0,0)), levels=design)
makeContrasts(rbind(cont.matrix, c(0,0,0,0)), levels=design2)
makeContrasts(rbind(cont.matrix, SMKc=c(0,0,0,0)), levels=design2)
cont.matrix2 <- makeContrasts(HealthyVsCancer = noCOPD.noCancer - noCOPD.Cancer,
HealthyVsCOPD = noCOPD.noCancer - COPD.noCancer,
HealthyVsCC = noCOPD.noCancer - COPD.Cancer,
CancerVsCOPD = noCOPD.Cancer - COPD.noCancer,
CancerVsCC = noCOPD.Cancer - COPD.Cancer,
COPDvsCC = COPD.noCancer - COPD.Cancer,
Diff1 = ((COPD.Cancer - noCOPD.Cancer) -
(COPD.noCancer - noCOPD.noCancer)),
Diff2 = c(-1, -1, -1, 1, 0),
levels=design2)
levels(design2)
levels(design)
design
cont.matrix2 <- makeContrasts(HealthyVsCancer = noCOPD.noCancer - noCOPD.Cancer,
HealthyVsCOPD = noCOPD.noCancer - COPD.noCancer,
HealthyVsCC = noCOPD.noCancer - COPD.Cancer,
CancerVsCOPD = noCOPD.Cancer - COPD.noCancer,
CancerVsCC = noCOPD.Cancer - COPD.Cancer,
COPDvsCC = COPD.noCancer - COPD.Cancer,
Diff1 = ((COPD.Cancer - noCOPD.Cancer) -
(COPD.noCancer - noCOPD.noCancer)),
Diff2 = c(-1, -1, -1, 1, 0),
levels=design)
cont.matrix2
fitX
fitXb <- contrasts.fit(fitX, cont.matrix2)
design
fitX$coefficients
names(fitX$coefficients)
had(fitX$coefficients)
head(fitX$coefficients)
design2
design
fitX <- lmFit(eset, design)
fitXb <- contrasts.fit(fitX, cont.matrix2)
fitXb <- eBayes(fitXb)
result2 <- decideTests(fitXb)
summary(results2)
results2 <- decideTests(fitXb)
summary(results2)
vennDiagram(results2[,2:5])
generate_heatmap(which(results2[, 2] != 0 & results2[, 3] != 0 & results2[, 4] != 0 & results2[, 5] != 0 ), eset)
generate_heatmap(which(results2[, 2] != 0 & results2[, 3] != 0 & results2[, 4] != 0 & results2[, 5] != 0 ), eset)
model.matrix(~0+ FEV1p, data=eset)
varLabels(eset)
model.matrix(~0+ FEV1Pc, data=eset)
model.matrix(~0+ FEV1Pc*FinalCaDXc, data=eset)
eset$SMKc==2
eset[eset$SMKc==2]
eset[,eset$SMKc==2]
eset[,eset$SMKc==1]
146+191
eset[,eset$SMKc==1]$indicator
summary(eset[,eset$SMKc==1]$indicator)
summary(eset[,eset$SMKc==12]$indicator)
summary(eset[,eset$SMKc==2]$indicator)
dim(design)
design
design[eset$SMKc==1]
design[,eset$SMKc==1]
dim(design)
design[eset$SMKc==1,]
design
model.matrix(design[eset$SMKc==1,])
esetF <- eset[,eset$SMKc==2]
esetF
summary(esetF$indicator)
esetC <- eset[,eset$SMKc==1]
designC <- model.matrix(~0 + CC[eset$SMKc==1,])
dim(CC)
designC <- model.matrix(~0 + CC[eset$SMKc==1])
desicnC
designC
names(designC)
conames(designC)
colnames(designC)
colnames(designC) <- levels(CC)
colnames(designC)
designF <- model.matrix(~0 + CC[eset$SMKc==2])
colnames(designF)
colnames(designF) <- levels(CC)
fitF <- lmFit(esetF, designF)
cont.matrixF <- makeContrasts(HealthyVsCancer = noCOPD.noCancer - noCOPD.Cancer,
HealthyVsCOPD = noCOPD.noCancer - COPD.noCancer,
HealthyVsCC = noCOPD.noCancer - COPD.Cancer,
CancerVsCOPD = noCOPD.Cancer - COPD.noCancer,
CancerVsCC = noCOPD.Cancer - COPD.Cancer,
COPDvsCC = COPD.noCancer - COPD.Cancer,
Diff1 = ((COPD.Cancer - noCOPD.Cancer) -
(COPD.noCancer - noCOPD.noCancer)),
levels=designF)
cont.matrixC <- makeContrasts(HealthyVsCancer = noCOPD.noCancer - noCOPD.Cancer,
HealthyVsCOPD = noCOPD.noCancer - COPD.noCancer,
HealthyVsCC = noCOPD.noCancer - COPD.Cancer,
CancerVsCOPD = noCOPD.Cancer - COPD.noCancer,
CancerVsCC = noCOPD.Cancer - COPD.Cancer,
COPDvsCC = COPD.noCancer - COPD.Cancer,
Diff1 = ((COPD.Cancer - noCOPD.Cancer) -
(COPD.noCancer - noCOPD.noCancer)),
levels=designC)
fitF2 <- contrasts.fit(fitF, cont.matrixF)
fitC2 <- contrasts.fit(fitC, cont.matrixC)
fitC <- lmFit(esetC, designC)
fitC2 <- contrasts.fit(fitC, cont.matrixC)
fitC2 <- eBayes(fitC2)
fitF2 <- eBayes(fitF2)
resultsF <- decideTests(fitF2)
resultsC <- decideTests(fitC2)
summary(resultsF)
summary(resultsC)
resultsC <- decideTests(fitC2, adjust.method="fdr")
resultsF <- decideTests(fitF2, adjust.method="fdr")
summary(resultsC)
summary(resultsF)
summary(results)
vennDiagram(resultsF[,1:5])
vennDiagram(resultsF[,2:5])
vennDiagram(resultsF[,2:6])
sum(resultsF[, 3]!=0)
sum(resultsF[, 3]!=0)
88+59
sum(resultsF[, 3] != 0 & resultsF[, 2] == 0 & resultsF[, 4] == 0 & resultsF[, 5] == 0 & resultsF[, 6] == 0)
which(resultsF[, 3] != 0 & resultsF[, 2] == 0 & resultsF[, 4] == 0 & resultsF[, 5] == 0 & resultsF[, 6] == 0)
generate_heatmap(inds=which(resultsF[, 3] != 0 & resultsF[, 2] == 0 & resultsF[, 4] == 0 & resultsF[, 5] == 0 & resultsF[, 6] == 0), esetF)
summary(resultsC)
generate_heatmap(inds=which(resultsF[, 3] == 0 & resultsF[, 2] != 0 & resultsF[, 4] != 0 & resultsF[, 5] == 0 & resultsF[, 6] != 0), esetF)
summary(resultsF)
generate_heatmap(inds=which(resultsF[, 1] == 0 & resultsF[, 2] != 0 & resultsF[, 3] != 0 & resultsF[, 5] != 0 & resultsF[, 6] != 0), esetF)
which(resultsF[, 1] == 0 & resultsF[, 2] != 0 & resultsF[, 3] != 0 & resultsF[, 5] != 0 & resultsF[, 6] != 0)
which(resultsF[, 2] != 0 & resultsF[, 3] != 0 & resultsF[, 5] != 0 & resultsF[, 6] != 0)
which(resultsF[, 2] != 0 & resultsF[, 3] != 0 & resultsF[, 6] != 0)
which(resultsF[, 2] != 0 & resultsF[, 6] != 0)
generate_heatmap(inds=which(resultsF[, 2] != 0 & resultsF[, 6] != 0), eset)
generate_heatmap(inds=which(resultsF[, 2] != 0 & resultsF[, 6] != 0), esetF)
summary(resultsF)
which(resultsF[, 1] == 0 & (resultsF[, 2] != 0 | resultsF[, 3] != 0 | resultsF[, 4] != 0 | resultsF[, 5] != 0) & (results[, 6] != 0 | results[, 4] != 0 | results[, 3] != 0))
length(which(resultsF[, 1] == 0 & (resultsF[, 2] != 0 | resultsF[, 3] != 0 | resultsF[, 4] != 0 | resultsF[, 5] != 0) & (results[, 6] != 0 | results[, 4] != 0 | results[, 3] != 0)))
length(which(resultsF[, 1] == 0 & (resultsF[, 2] != 0 | resultsF[, 3] != 0 | resultsF[, 4] != 0 | resultsF[, 5] != 0) & (resultsF[, 6] != 0 | resultsF[, 4] != 0 | resultsF[, 3] != 0)))
summary(resultsF)
2204+2262
length(which(resultsF[, 1] == 0 & (resultsF[, 2] != 0 | resultsF[, 3] != 0 | resultsF[, 4] != 0 | resultsF[, 5] != 0) & (resultsF[, 6] != 0 | resultsF[, 4] != 0 | resultsF[, 3] != 0)))
inds <- (which(resultsF[, 1] == 0 & (resultsF[, 2] != 0 | resultsF[, 3] != 0 | resultsF[, 4] != 0 | resultsF[, 5] != 0) & (resultsF[, 6] != 0 | resultsF[, 4] != 0 | resultsF[, 3] != 0)))
inds
dim(resultsF)
topTable(resultsF)
dim(fitF)
dim(fitF2)
topTable(fitF2)
topTable(fitF2, adjust.method="fdr")
topTable(fitF2[inds,], adjust.method="fdr")
fitF2[inds,]
o <- order(fitF2[inds,]$F.p.value)
o
fitF2$genes[o]
fitF2$genes[o, ]
fitF2$genes[o[1:100], ]
fitF2[inds,]$genes[o[1:30], ]
fitF2[inds,]$genes[o[1:100], ]
fitF2[inds,][o[1:100]]
fitF2[inds,][o[1:100],]
inds[o[1:100]]
generate_heatmap(inds[o[1:100]], esetF)
generate_heatmap(inds[o[1:200]], esetF)
save_entrez(inds[o[1:200]], rownames(esetF))
save_entrez(inds[o[1:200]], featureNames(esetF), "genes200_COPDchanged_Cachanged_notCaAlonechanged")
save_entrez(inds[o[1:300]], featureNames(esetF), "genes300_COPDchanged_Cachanged_notCaAlonechanged")
save_entrez(inds[o[1:400]], featureNames(esetF), "genes400_COPDchanged_Cachanged_notCaAlonechanged")
save_entrez(inds[o[1:50]], featureNames(esetF), "genes50_COPDchanged_Cachanged_notCaAlonechanged")
pca
prcomp
pca
pca <- prcomp(exprs(eset))
str(pca)
dim(pca$rotation)
pca$rotation
colnames(pca$rotation)
plot(pca$rotation[,1], pca$rotation[,2])
affyPLM
library(affy)
library(affyPLM)
fitPLM
?fitPLM
pca <- prcomp(exprs(exprData))
dim(exprs(exprData))
plot(pca$rotation[,1], pca$rotation[,2])
plot(pca$rotation[,2], pca$rotation[,3])
plot(pca$rotation[,3], pca$rotation[,3])
plot(pca$rotation[,3], pca$rotation[,4])
range(pca$rotation[,1])
tail(pca$rotation[,1])
?tail
head(pca$rotation[,1])
o <- sort(pca$rotation[,1])
o
o <- sort(pca$rotation[,1], decreasing=FALSE)
o
o <- sort(pca$rotation[,1], decreasing=TRUE)
o
o <- order(pca$rotation[,1])
o
o <- order(pca$rotation[,1], decreasing=FALSE)
pca$rotation[o,1]
pca$rotation[o[1:4],1]
plot(pca$rotation[o[5:length(pca$rotation[,1])], 1], [o[5:length(pca$rotation[,1])], 2])
5:length(pca$rotation[,1])
o[5:length(pca$rotation[,1])
]
o[5:length(pca$rotation[,1])]
ii <0 o[5:length(pca$rotation[,1])]
ii <- o[5:length(pca$rotation[,1])]
plot(pca$rotation[ii, 1], pca$rotation[ii, 2])
ii <- o[6:length(pca$rotation[,1])]
plot(pca$rotation[ii, 1], pca$rotation[ii, 2])
dim(resultsF)
summary(resultsF)
cont.matrixF <- makeContrasts(HealthyVsCancer = noCOPD.noCancer - noCOPD.Cancer,
HealthyVsCOPD = noCOPD.noCancer - COPD.noCancer,
HealthyVsCC = noCOPD.noCancer - COPD.Cancer,
CancerVsCOPD = noCOPD.Cancer - COPD.noCancer,
CancerVsCC = noCOPD.Cancer - COPD.Cancer,
COPDvsCC = COPD.noCancer - COPD.Cancer,
Diff1 = ((COPD.Cancer - COPD.noCancer) -
(noCOPD.Cancer - noCOPD.noCancer)),
levels=designF)
fitF2 <- contrasts.fit(fitF, cont.matrixF)
fitF2 <- eBayes(fitF2)
resultsF <- decideTests(fitF2)
summary(resultsF)
cont.matrixF
which(resultsF!=0)
which(resultsF[,7]!=0)
which(resultsF[,6]!=0)
summary(resultsF)
topTable(resultsF)
topTable(fitF2[which(resultsF[,6]!=0),])
?affyPLM
?fitPLM
summary(resultsC)
summary(resultsF)
fit2
summary(decideTests(fitF2, adjust.method="fdr"))
packages()P
packages()
library(prcomp)
prcomp
library(pca)
?prcomp
savehistory("/restricted/projectnb/pulmarray/LinGA_protected/Allegro/COPD_Cancer/experiments/2014-06-12/LimmaLearningHistory.RHistory")
